---

- name: Replace default /etc/hosts file with configured hosts file from templates
  template: src=hosts  dest=/etc/hosts
    #owner: root
    #group: root
    #mode: 0744


- name: Replace default /etc/hostname file with configured hostname file from templates
  template: src=hostname dest=/etc/hostname
  



- name: Install the latest version of Chrony 
  package:
    name: chrony
    state: latest

- name: enable chronyd 
  command: systemctl enable chronyd.service
  notify: restart chronyd


- name: disable selinux
  action: selinux policy=targeted state=permissive


- name: Install the latest verion of centos-release-openstack-ocata
  package: 
    name: centos-release-openstack-ocata
    state: latest 

- name: upgrade all packages
  yum: name=* state=latest

- name: COMMON | Install basic packages 
  package: name={{ item }} state=present
  with_items:
    - python-openstackclient
    - openstack-selinux
    - mariadb
    - mariadb-server
    - python2-PyMySQL
    - memcached   
    - openstack-keystone 
    - httpd 
    - mod_wsgi

######MY SQL SECURE SETUP ALONG WITH MARIADB#######
# - name: Add configuration
#   template: src={{ mysql_conf_tpl }} dest={{ mysql_conf_dir[ansible_distribution] }}/{{ mysql_conf_file }} owner=root group=root mode=0644
#   when: mysql_conf_tpl != 'change_me'
#   notify: restart mysql
- name: Set root user password
  # If .my.cnf already exists, this will cause an mysql-root-password update.
  mysql_user:
    login_user: root
    login_password: and345
    name: root
    password: "{{ mysql_root_password}}"
    check_implicit_admin: true

- name: Create .my.cnf
  template:
   src: "client.my.cnf.j2"
   dest: "/root/.my.cnf"
   owner: root
   group: root
   mode: 0600

- name: Create a new database with name 'keystone'
  mysql_db:
    name: keystone
    state: present


- mysql_user:
    name: keystone
    password: KEYSTONE_DBPASS
    host_all: yes
    state: present

- name: Populate the Identity service database
  command: su -s /bin/sh -c "keystone-manage db_sync" keystone
#  warn: no

- name: initialize Fernet key repositories - 1
  command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

- name: initialize Fernet key repositories - 2
  command: keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

#- command: keystone-manage bootstrap --bootstrap-password ADMIN_PASS --bootstrap-password ADMIN_PASS 
- command: keystone-manage bootstrap --bootstrap-password ADMIN_PASS --bootstrap-admin-url http://controller:35357/v3/ 
- command: keystone-manage bootstrap --bootstrap-password ADMIN_PASS --bootstrap-internal-url http://controller:5000/v3/  
- command: keystone-manage bootstrap --bootstrap-password ADMIN_PASS --bootstrap-public-url http://controller:5000/v3/ 
- command: keystone-manage bootstrap --bootstrap-password ADMIN_PASS --bootstrap-region-id RegionOne


# - name: Start and enable service
#   service: name=mysql state=started enabled=yes

# - include: mysql_secure_installation.yml
#   when: mysql_secure_installation and mysql_root_password is defined

- name: Adding actions in the keystone conf file 
  template: src=keystone.conf dest=//etc/keystone/keystone.conf

- name: Create and edit the/etc/my.cnf.d/openstack.cnf file
  template: src=openstack.cnf dest=/etc/my.cnf.d/openstack.cnf
 # owner: root
 # group: root 
 # mode: 0744
  

- name: enable mariadb
  command: systemctl enable mariadb.service
  notify: start mariadb
  ignore_errors: yes
  
#- name: still fixing 
#  command: mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/ 
  
#- name: still fixing 
#  command: mysql_secure_installation
#  notify: start mariadb 

# - name: start mariadb
#   command: systemctl start mariadb.service
#   ignore_errors: yes 

- name: rabbitmq-server 
  package: 
    name: rabbitmq-server
    state: latest 

- name: enable rabbitmq-server
  command: systemctl enable rabbitmq-server.service
  notify: start rabbitmq-server

# - name: start rabbitmq-server
#   command: systemctl start rabbitmq-server.service

#- name: add user
#  command: rabbitmqctl add_user openstack RABBIT_PASS
  
#- name: set permissions
#  command: rabbitmqctl set_permissions openstack ".*" ".*" ".*"
#  ignore_errors: yes

- rabbitmq_user:
    user: openstack
    password: RABBIT_PASS
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present



- name: install memcached python-memcached
  package: 
    name: python-memcached
    state: latest 

- name: replace line
  lineinfile: 
    dest: /etc/sysconfig/memcached
    regexp: '^(.*)OPTIONS="-l 127.0.0.1,::1"(.*)$' 
    line: 'OPTIONS="-l 127.0.0.1,::1,controller"'
    backrefs: yes
  

- name: enable memcached
  command: sudo systemctl enable memcached.service 
 # warn: no
  notify: start memcached




- name: Adding ServerName "controller" to httpd.conf file
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    line: 'ServerName controller'

- name: Create a link to the /usr/share/keystone/wsgi-keystone.conf file
#  file:
#    dest: /usr/share/keystone/wsgi-keystone.conf
#    src: /etc/httpd/conf.d/
#    state: link
#    mode: 0755
  command: ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/ 

- name: Enable httpd service 
  command: systemctl enable httpd.service
  notify: start httpd 


- shell: export OS_USERNAME=admin
- shell: export OS_PASSWORD=ADMIN_PASS
- shell: export OS_PROJECT_NAME=admin
- shell: export OS_USER_DOMAIN_NAME=Default
- shell: export OS_PROJECT_DOMAIN_NAME=Default
- shell: export OS_AUTH_URL=http://controller:35357/v3 $ export OS_IDENTITY_API_VERSION=3







